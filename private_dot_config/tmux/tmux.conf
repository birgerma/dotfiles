
# Use tmux plugin manager
# First use, install plugin manager:
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'

# Remap prefix
unbind-key C-b
set -g prefix M-Space

set -g default-terminal 'tmux-256color'
set -as terminal-features ',xterm*:RGB'
set set-clipboard on
set -s escape-time 1
set -gw xterm-keys on

set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'
set -as terminal-features 'foot*:extkeys'
set -g allow-passthrough all
unbind-key -n C-Enter

# Set Default shell:
set -g default-command /usr/bin/fish

# Fix scrolling with mouse
set -g mouse on

# Start numbering windows from index 1
set -g base-index 1

# Start numbering panes from index 1
setw -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
# see man tmux FORMATS
set-option -g automatic-rename-format '#I#{pane_current_command}'
set-option -g set-titles on

# Tmux vi copy
set -g mode-keys vi
bind Space copy-mode 
bind-key    -T copy-mode-vi n                    send-keys -X cursor-left
bind-key    -T copy-mode-vi e                    send-keys -X cursor-down
bind-key    -T copy-mode-vi i                    send-keys -X cursor-up
bind-key    -T copy-mode-vi o                    send-keys -X cursor-right

bind-key    -T copy-mode-vi k                    send-keys -X search-again
bind-key    -T copy-mode-vi j                    send-keys -X next-word-end
bind-key    -T copy-mode-vi h                    send-keys -X other-end

bind-key    -T copy-mode-vi K                    send-keys -X search-reverse
bind-key    -T copy-mode-vi J                    send-keys -X next-space-end

bind-key    -T copy-mode-vi N                    send-keys -X top-line
bind-key    -T copy-mode-vi E                    send-keys -X scroll-down
bind-key    -T copy-mode-vi I                    send-keys -X scroll-up
bind-key    -T copy-mode-vi O                    send-keys -X bottom-line

bind-key    -T copy-mode-vi 'C-v'                send-keys -X begin-selection\; send-keys -X rectangle-toggle
bind-key    -T copy-mode-vi 'v'                  send-keys -X begin-selection

#bind -t vi-copy M-w copy-pipe "xclip -sel clip -i"
# bind C-Insert run -b "tmux show-buffer | wl-copy -p"
# bind S-Insert run -b "tmux show-buffer | wl-paste -pn"
bind S-Insert run -b "tmux show-buffer | wl-paste -n"
unbind M-w
unbind M-n
unbind M-x
bind C-w run -b "tmux show-buffer | wl-copy"
# Split screen
bind h split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind \\ split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

# New tab in current path
bind c new-window -c "#{pane_current_path}"
# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
# Shift arrow to switch windows
bind -n M-N previous-window
bind -n M-O next-window

# Switch panes using M-<arrow>
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R	

# Switch panes using N, E, l, O
bind -n M-n select-pane -L
bind -n M-e select-pane -D
bind -n M-i select-pane -U
bind -n M-o select-pane -R	

# Rezise pane
bind -r n resize-pane -L 10
bind -r e resize-pane -D 10
bind -r i resize-pane -U 10
bind -r o resize-pane -R 10
bind -n M-f resize-pane -Z	

# No delay for escape key press
set -sg escape-time 0

#### VISUALS ####
# set -g @plugin 'fabioluciano/tmux-tokyo-night'
# set -g status-bg black
# set -g status-fg white

# Tokyo Night inspired
# https://github.com/janoamaral/tokyo-night-tmux/blob/e34d41e4918f6e30918e03f6b930f24b0dbefc68/tokyo-night.tmux
set -g status-style bg=#1A1B26
set -g message-style "bg=#7aa2f7,fg=#2A2F41"
set -g message-command-style "fg=#c0caf5,bg=#2A2F41"

# set -g pane-border-style "fg=#2A2F41"
set -g pane-border-style "fg=#6441a5"
set -g pane-active-border-style "bold,fg=#7aa2f7"

set -g status-style bg=#1A1B26
set -g status-right-length 150

# tmux set -g status-left "#[fg=#1F2335,bg=#6441a5,bold] #{?client_prefix,󰠠 ,#[dim]󰤂 }#[fg=#ffffff,bg=#6441a5,bold,nodim]#S $RESET"


# active window title colors    
# set -g window-status-current-style fg=black,bg=white            

# set -g status-interval 60
# set -g status-left-length 30
# set -g status-left "#[fg=green](#S) #(whoami)"

# Tmux mode indicator, to automatically show current mode
set -g @plugin 'MunifTanjim/tmux-mode-indicator'
# style values for copy prompt
set -g @mode_indicator_copy_mode_style 'bg=yellow,fg=black'

# Suspend local tmux session
set -g @plugin 'MunifTanjim/tmux-suspend'
set -g @suspend_key 'F12'
# remove colors from status line for suspended state
set -g @suspend_suspended_options " \
  status-left-style::bg=brightblack\\,fg=black bold dim, \
  window-status-current-style:gw:bg=brightblack\\,fg=black, \
  window-status-last-style:gw:fg=brightblack, \
  window-status-style:gw:bg=black\\,fg=brightblack, \
  @mode_indicator_custom_prompt:: ---- , \
  @mode_indicator_custom_mode_style::bg=brightblack\\,fg=black, \
"

#+--- Bars LEFT ---+
set -g status-left "#[fg=#1F2335,bg=#6441a5,bold] #{?client_prefix,󰠠 ,#[dim]󰤂 }#[fg=#ffffff,bg=#6441a5,bold,nodim]#S#[bg=black,fg=#6441a5,bold,nodim] $RESET"
# ](bg:#769ff0 fg:#a3aed2)\
##############################
#+--- Windows ---+
# Focus
set -g window-status-current-format "#[fg=#44dfaf,bg=#1F2335]   #[fg=#a9b1d6]#I $window_number #[bold,nodim]#W#[nobold,dim]#{?window_zoomed_flag, #[bold]#[fg=green] , } #{?window_last_flag,,} "
# set -g window-status-current-format "#[fg=#44dfaf,bg=#1F2335]   #[fg=#a9b1d6]$window_number #[bold,nodim]#W#[nobold,dim]#{?window_zoomed_flag, $zoom_number, $custom_pane} #{?window_last_flag,,} "

# Unfocused
set -g window-status-format "#[fg=#c0caf5,bg=default,none,dim]   #I #W#[nobold,dim]#{?window_zoomed_flag, #[fg=green] , $custom_pane}#[fg=yellow,] #{?window_last_flag,󰁯 ,} "
# set -g window-status-format "#[fg=#c0caf5,bg=default,none,dim]   $window_number #W#[nobold,dim]#{?window_zoomed_flag, $zoom_number, $custom_pane}#[fg=yellow,blink] #{?window_last_flag,󰁯 ,} "

  #+--- Bars RIGHT ---+
set -g status-right "$cmus_status#[fg=#a9b1d6,bg=black]  %d/%m #[]❬%H:%M)"

set -g window-status-separator ""

# Enable names for panes
# set -g pane-border-format "#{pane_index} #{pane_title}"
# set -g pane-border-status bottom

# set -g pane-border-status top
# set -g pane-border-format "#{pane_index} #T #{pane_current_command}"

# Save and restore session automatically
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-boot 'on'
# set -g @resurrect-processes 'ssh emacs nvim em'
# set -g @resurrect-strategy-nvim 'session'
# set -g @continuum-restore 'on'

bind -n f2 display-popup -E "/home/marcus/.local/bin/tmux-fzf.py"
bind g display-popup -d '#{pane_current_path}' -w 90% -h 90% "lazygit"
bind s display-popup -d '#{pane_current_path}' -w 90% -h 90% "~/.local/bin/chtfzf.sh"
bind -n 'M-t' run-shell '~/.local/bin/tmux-scratch.sh'

set-hook -g 'session-closed' 'run-shell /home/marcus/.local/bin/remove-dangling-scratch.py'
set-hook -g 'session-created' 'run-shell "tmux source-file #{pane_current_path}/.tmux.local.conf > /dev/null|true"'

# Tmux fzf
set -g @plugin 'sainnhe/tmux-fzf'

# Use tmux-vim plugin to move between vim and tmux panes
set -g @plugin 'laishulu/emacs-tmux-pane'
is_vim_emacs='echo "#{pane_current_command}" | \
    grep -iqE "((^|\/)g?(view|n?vim?x?)(diff)?$)|emacs"'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'M-n' if-shell "$is_vim_emacs" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'M-e' if-shell "$is_vim_emacs" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'M-i' if-shell "$is_vim_emacs" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'M-o' if-shell "$is_vim_emacs" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

# bind-key -n 'C-Enter' if-shell "$is_vim_emacs" { send-keys C-Enter } # Seams to work
# bind-key -n 'C-Enter' { send-keys C-Enter }
# Load environment variables
set-option -g update-environment "DISPLAY WAYLAND_DISPLAY SSH_AUTH_SOCK SWAYSOCK"
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

bind-key r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'
 
run '~/.config/tmux/plugins/tpm/tpm'

# Update emacs environment
run /home/marcus/.local/bin/update-emacs-env.sh